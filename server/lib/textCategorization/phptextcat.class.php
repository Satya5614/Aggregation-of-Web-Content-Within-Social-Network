<?php    class PhpTextCat	{		const DEFAULT_DIR_LANGUAGES = 'languages/';		const DEFAULT_EXTENSION_LANGUAGES = '.lng';		protected $_languages = array();		protected $_languages_extension = self::DEFAULT_EXTENSION_LANGUAGES;		protected $_languages_dir = self::DEFAULT_DIR_LANGUAGES;		public function setLanguageExt($ext){        $this->_languages_extension = $ext;    }		public function setLanguageDir($dir){        $this->_languages_dir = $dir;          }    		public function __construct($languages = null) {			if(func_num_args() > 1)				$languages = func_get_args();			if(!empty($languages))				$this->loadLanguages($languages);		}        		public function loadLanguages($languages){			if(func_num_args() > 1)				$languages = func_get_args();			else if(!is_array($languages))				$languages = array((string) $languages);        			foreach ($languages as $lng) {				$this->loadLanguage($lng);			}                		}    		public function loadLanguage($lng){			$lng = preg_replace('/[^a-z0-9_-]/i', '', $lng);			$filename = $this->_languages_dir . $lng . $this->_languages_extension;			if (file_exists($filename))				$this->_languages[$lng] = str_replace('_', ' ', file($filename, FILE_IGNORE_NEW_LINES));			else				error_log("php-textcat language file [{$lng}] not found");		}    		public function rateText($text) {			$text = strtolower($text);			$count = array();			foreach ($this->_languages as $lng => $ngrams) {				$count[$lng] = 0;				foreach ($ngrams as $ngram) {					$count[$lng] += substr_count($text, $ngram);				}			}			arsort($count);			return $count;		}    		public function guessLanguage($text) {			$grades = array_keys($this->rateText($text));			return reset($grades);		}	}?>